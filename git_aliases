Define git aliases, like this alias myAlias:
git config --global alias.myAlias 'myArgs'

Now invoking "git myAlias" will be the same as invoking "git myArgs"

# git grog: try git log, and then try git grog. :)
git config --global alias.grog 'log --graph --abbrev-commit --decorate --all --format=format:"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green) (%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)"'

# git list: list all files under version control in the master branch
git config --global alias.list 'ls-tree -r master --name-only'

# git staaash: if you want to undo your changes, but stash them for later, or just: git stash -all
git config --global alias.staaash 'stash -all'

# git shorty: svn-style more compact status
git config --global alias.shorty 'status --short --branch'

# git addy: stage all files for commit
git config --global alias.addy 'add -A'

# git alias: get all of your currently defined git aliases
git config --global alias.alias 'config --get-regexp ^alias\.'
